networks:
    mattermost_backend:
        driver: bridge

services:
    mattermost_postgres:
        image: postgres:13-alpine
        container_name: mattermost_postgres
        restart: unless-stopped
        security_opt:
            - no-new-privileges:true
        pids_limit: 100
        read_only: true
        networks:
            - mattermost_backend
        tmpfs:
            - /tmp
            - /var/run/postgresql
        volumes:
            - ${APP_ROOT}/mattermost/postgresql:/var/lib/postgresql/data
        environment:
            # timezone inside container
            - TZ

            # necessary Postgres options/variables
            - POSTGRES_USER=mmuser
            - POSTGRES_PASSWORD=${MATTERMOST_PG_PASS}
            - POSTGRES_DB=mattermost

    mattermost:
        depends_on:
            - mattermost_postgres
        build:
            context: ./container
        container_name: mattermost
        restart: unless-stopped
        user: ${PUID}:${PGID}
        networks:
            - mattermost_backend
            - traefik
        security_opt:
            - no-new-privileges:true
        pids_limit: 200
        tmpfs:
            - /tmp
        volumes:
            - ${APP_ROOT}/mattermost/config:/mattermost/config:rw
            - ${APP_ROOT}/mattermost/data:/mattermost/data:rw
            - ${APP_ROOT}/mattermost/logs:/mattermost/logs:rw
            - ${APP_ROOT}/mattermost/plugins:/mattermost/plugins:rw
            - ${APP_ROOT}/mattermost/client/plugins:/mattermost/client/plugins:rw
            - ${APP_ROOT}/bleve-indexes:/mattermost/bleve-indexes:rw
            # When you want to use SSO with GitLab, you have to add the cert pki chain of GitLab inside Alpine
            # to avoid Token request failed: certificate signed by unknown authority
            # (link: https://github.com/mattermost/mattermost-server/issues/13059 and https://github.com/mattermost/docker/issues/34)
            # - ${GITLAB_PKI_CHAIN_PATH}:/etc/ssl/certs/pki_chain.pem:ro
        environment:
            # timezone inside container
            - TZ

            - PUID=${PUID}
            - PGID=${PGID}

            - HTTP_PORT=8080

            # necessary Mattermost options/variables (see env.example)
            - MM_SQLSETTINGS_DRIVERNAME=postgres
            - MM_SQLSETTINGS_DATASOURCE=postgres://mmuser:${MATTERMOST_PG_PASS}@mattermost_postgres:5432/mattermost?sslmode=disable&connect_timeout=10

            # necessary for bleve
            - MM_BLEVESETTINGS_INDEXDIR=/mattermost/bleve-indexes

            # additional settings
            - MM_SERVICESETTINGS_SITEURL=https://${DOMAINNAME}
        command: mattermost server
        expose:
            - 8080
        labels:
            traefik.enable: true
            traefik.http.routers.mattermost.rule: Host(`mattermost.${DOMAINNAME}`)

            homepage.group: stuff
            homepage.name: Mattermost
            homepage.icon: sh-mattermost.svg
            homepage.href: https://mattermost.${DOMAINNAME}
