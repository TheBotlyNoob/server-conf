networks:
    matrix_backend:
        driver: bridge

services:
    matrix_postgres:
        image: postgres:13-alpine
        container_name: matrix_postgres
        restart: unless-stopped
        security_opt:
            - no-new-privileges:true
        pids_limit: 100
        user: ${PUID}:${PGID}
        read_only: true
        networks:
            - matrix_backend
        tmpfs:
            - /tmp
            - /var/run/postgresql
        volumes:
            - ${APP_ROOT}/matrix/postgresql:/var/lib/postgresql/data
        environment:
            # timezone inside container
            - TZ

            # necessary Postgres options/variables
            - POSTGRES_USER=matrix-user
            - POSTGRES_PASSWORD=${MATRIX_PG_PASS}
            - POSTGRES_DB=matrix

            - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C

        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"
                ]
            start_period: 20s
            interval: 30s
            retries: 5
            timeout: 5s

    matrix-config:
        image: alpine:latest
        container_name: matrix-config
        user: ${PUID}:${PGID}
        entrypoint: ["/bin/sh", "/usr/local/bin/init.sh"]
        volumes:
            - ./config/homeserver.template.yaml:/homeserver.template.yaml
            - ${APP_ROOT}/matrix/synapse/config:/config

            - ./container/init.sh:/usr/local/bin/init.sh
        restart: no
        network_mode: none
        environment:
            POSTGRES_USER: matrix-user
            POSTGRES_PASSWORD: ${MATRIX_PG_PASS}
            POSTGRES_DB: matrix
            POSTGRES_HOST: matrix_postgres

            REGISTRATION_SHARED_SECRET: ${MATRIX_REGISTRATION_SHARED_SECRET:?}
            MACAROON_SECRET_KEY: ${MATRIX_MACAROON_SECRET_KEY:?}
            FORM_SECRET: ${MATRIX_FORM_SECRET:?}

            OIDC_ISSUER_URL: ${MATRIX_OIDC_ISSUER_URL:?}
            OIDC_CLIENT_ID: ${MATRIX_OIDC_CLIENT_ID:?}
            OIDC_CLIENT_SECRET: ${MATRIX_OIDC_CLIENT_SECRET:?}

            DOMAINNAME: ${DOMAINNAME}

    matrix:
        image: matrixdotorg/synapse:latest
        depends_on:
            matrix_postgres:
                condition: service_healthy
            matrix-config:
                condition: service_completed_successfully
        container_name: matrix
        restart: unless-stopped
        user: ${PUID}:${PGID}
        networks:
            - matrix_backend
            - traefik
        security_opt:
            - no-new-privileges:true
        pids_limit: 200
        tmpfs:
            - /tmp
        volumes:
            - ${APP_ROOT}/matrix/synapse/data:/data
            - ${APP_ROOT}/matrix/synapse/config:/config
            - ${APP_ROOT}/matrix/synbapse/media:/media

            - ./config/homeserver.template.yaml:/homeserver.template.yaml
            - ./config/log_config.yaml:/log_config.yaml
        environment:
            # timezone inside container
            TZ: ${TZ}

            PUID: ${PUID}
            PGID: ${PGID}

            SYNAPSE_CONFIG_PATH: /config/homeserver.yaml

        expose:
            - 8008
        labels:
            traefik.enable: true

            traefik.http.routers.matrix-rtr.rule: Host(`matrix.${DOMAINNAME}`)
