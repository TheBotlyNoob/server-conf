services:
    static:
        image: caddy:latest
        container_name: static
        user: ${PUID}:${PGID}
        security_opt:
            - no-new-privileges:true
        pids_limit: 200
        restart: unless-stopped
        networks:
            - traefik
        expose:
            - 8080
        environment:
            DOMAINNAME: ${DOMAINNAME}
        volumes:
            - ./config/Caddyfile:/etc/caddy/Caddyfile
            - ./web:/www-template

            - ${APP_ROOT}/static/templates:/var/www

            - ./container/init.sh:/usr/local/bin/init.sh

        entrypoint: ["/bin/sh", "/usr/local/bin/init.sh"]

        labels:
            traefik.enable: true
            traefik.http.services.static-svc.loadbalancer.server.port: 8080
            traefik.http.routers.static-rtr.rule: Host(`${DOMAINNAME}`) && PathPrefix(`/.well-known`)
    error-pages:
        image: ghcr.io/tarampampam/error-pages:latest # using the latest tag is highly discouraged
        user: ${PUID}:${PGID}
        container_name: error-pages
        restart: unless-stopped
        pids_limit: 200
        security_opt:
            - no-new-privileges:true
        environment:
            TEMPLATE_NAME: connection # set the error pages template
        networks:
            - traefik
        labels:
            traefik.enable: true
            # use as "fallback" for any NON-registered services (with priority below normal)
            traefik.http.routers.error-pages-rtr.rule: HostRegexp(`.+`) || Host(`error.${DOMAINNAME}`)
            traefik.http.routers.error-pages-rtr.priority: 10

            traefik.http.routers.error-pages-rtr.middlewares: middlewares-error-pages@file

            # define service properties
            traefik.http.services.error-pages-svc.loadbalancer.server.port: 8080
