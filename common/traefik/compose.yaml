###############################################################
# Project Name
#
# https://docs.docker.com/compose/compose-file/05-services/#security_opt
# https://docs.docker.com/compose/environment-variables/set-environment-variables/
#
###############################################################
name: traefik
services:
    # ------------------------------
    # -- Traefik 3
    # -- Updated 2024-June-04
    # ------------------------------
    traefik:
        image: traefik:v3.2
        restart: unless-stopped
        user: ${PUID}:${PGID}
        security_opt:
            - no-new-privileges=true
        depends_on:
            - socket-proxy # Comment out if not using socket-proxy
        environment:
            TZ: ${TZ}
            DOMAINNAME: ${DOMAINNAME}

            # Global configuration
            TRAEFIK_GLOBAL_CHECKNEWVERSION: false
            TRAEFIK_GLOBAL_SENDANONYMOUSUSAGE: true

            # Entrypoints
            TRAEFIK_ENTRYPOINTS_WEB_ADDRESS: ":80"

            # Logs
            TRAEFIK_LOG_LEVEL: INFO
            TRAEFIK_LOG_NOCOLOR: false
            TRAEFIK_LOG_MAXSIZE: 100
            TRAEFIK_LOG_COMPRESS: true

            # Access logs
            TRAEFIK_ACCESSLOG_ADDINTERNALS: true
            TRAEFIK_ACCESSLOG_FILEPATH: /logs/traefik-access.log
            TRAEFIK_ACCESSLOG_BUFFERINGSIZE: 100
            TRAEFIK_ACCESSLOG_FIELDS_NAMES_STARTUTC: drop
            TRAEFIK_ACCESSLOG_FILTERS_STATUSCODES: "204-299,400-499,500-599"

            # API and Dashboard
            TRAEFIK_API_DASHBOARD: true

            # Providers
            TRAEFIK_PROVIDERS_DOCKER_ENDPOINT: "tcp://socket-proxy:2375"
            TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT: false
            TRAEFIK_PROVIDERS_DOCKER_NETWORK: traefik

            TRAEFIK_PROVIDERS_FILE_DIRECTORY: /rules
            TRAEFIK_PROVIDERS_FILE_WATCH: true

            # http -> https redirect
            TRAEFIK_ENTRYPOINTS_WEB_HTTP_REDIRECTIONS_ENTRYPOINT_TO: websecure
            TRAEFIK_ENTRYPOINTS_WEB_HTTP_REDIRECTIONS_ENTRYPOINT_SCHEME: https

            TRAEFIK_ENTRYPOINTS_WEBSECURE_ADDRESS: ":443"
            TRAEFIK_ENTRYPOINTS_WEBSECURE_ASDEFAULT: true

            # general middlewares
            TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_MIDDLEWARES: >-
                middlewares-rate-limit@file,
                middlewares-compress@file,
                middlewares-secure-headers@file,
                middlewares-status@file

            TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_TLS_OPTIONS: "tls-opts@file"
            TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_TLS_CERTRESOLVER: "le"

            # acme challenge domain
            TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_TLS_DOMAINS_0_MAIN: ${DOMAINNAME:?needs domain name}

            TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_TLS_DOMAINS_0_SANS: "*.${DOMAINNAME:?needs domain name}"

            # allowed IPs for forwarded headers
            # Cloudflare and local networks
            TRAEFIK_ENTRYPOINTS_WEBSECURE_FORWARDEDHEADERS_TRUSTEDIPS: >-
                173.245.48.0/20,
                103.21.244.0/22,
                103.22.200.0/22,
                103.31.4.0/22,
                141.101.64.0/18,
                108.162.192.0/18,
                190.93.240.0/20,
                188.114.96.0/20,
                197.234.240.0/22,
                198.41.128.0/17,
                162.158.0.0/15,
                104.16.0.0/13,
                104.24.0.0/14,
                172.64.0.0/13,
                131.0.72.0/22,
                127.0.0.1/32,
                10.0.0.0/8,
                192.168.0.0/16,
                172.16.0.0/12

            TRAEFIK_CERTIFICATESRESOLVERS_LE_ACME_EMAIL: ${CF_API_EMAIL?needs cloudflare email}

            CF_API_EMAIL: ${CF_API_EMAIL:?needs cloudflare email}
            CF_DNS_API_TOKEN: ${CF_DNS_API_TOKEN:?needs cloudflare dns token}

            # Let's Encrypt (ACME)
            TRAEFIK_CERTIFICATESRESOLVERS_LE_ACME_STORAGE: "/data/acme.json"
            TRAEFIK_CERTIFICATESRESOLVERS_LE_ACME_DNSCHALLENGE_PROVIDER: cloudflare
            TRAEFIK_CERTIFICATESRESOLVERS_LE_ACME_DNSCHALLENGE_RESOLVERS: "1.1.1.1:53,8.8.8.8:53"
        volumes:
            - "./config:/config" # traefik.yaml
            - "./rules:/rules" # Dynamic File Provider directory
            ## When using Docker Socket Proxy, comment out the below direct socket access
            ## Ensure traefik.yaml matches chosen method
            # - "/var/run/docker.sock:/var/run/docker.sock:ro"
        labels:
            traefik.enable: true
            ## HTTP Routers
            traefik.http.routers.traefik-rtr.rule: Host(`traefik.${DOMAINNAME}`)
            traefik.http.routers.traefik-rtr.middlewares: middlewares-authentik@file
            #### Migrate individual service cert resolver to global resolution in traefik.yaml
            #- "traefik.http.routers.traefik-rtr.tls=true"
            #- "traefik.http.routers.traefik-rtr.tls.certresolver=le"
            #- "traefik.http.routers.traefik-rtr.tls.domains[0].main=$DOMAINNAME"
            #- "traefik.http.routers.traefik-rtr.tls.domains[0].sans=*.$DOMAINNAME"
            ## Services - API
            traefik.http.routers.traefik-rtr.service: api@internal
# IMPORTANT! this doesn't contain TLS settings. Extend this with your own.
