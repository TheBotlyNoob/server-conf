services:
    ### torrenting stuffs ###
    qbittorrent:
        container_name: qbittorrent
        image: lscr.io/linuxserver/qbittorrent:latest
        user: ${PUID}:${PGID}
        volumes:
            - ${DATA_MOUNT_DIR}:/data
            - ${QBITTORRENT_INCOMPLETE_MOUNT}:/downloads
            - ${APP_ROOT}/qbittorrent/config:/config
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ:-Etc/UTC}
            - WEBBUI_PORT=8080
            - TORRENTING_PORT=${TORRENT_PORT}
            - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:qbittorrent
            - TP_THEME=${TP_THEME}
        logging:
            driver: json-file
            options:
                max-size: 10m
        network_mode: "service:gluetun"
        restart: unless-stopped

    cross-seed:
        image: ghcr.io/cross-seed/cross-seed
        container_name: cross-seed
        user: ${PUID}:${PGID} # optional but recommended
        volumes:
            - ${APP_ROOT}/cross-seed/config:/config
            - ${APP_ROOT}/qbittorrent/config/qBittorrent/BT_backup:/torrents:ro # your torrent clients .torrent cache, can and should be mounted read-only (e.g. qbit: `BT_Backup` | deluge: `state` | transmission: `transmission/torrents` | rtorrent: session dir from `.rtorrent.rc`)
            - ${APP_ROOT}/cross-seed/torrents:/cross-seeds
            # will need to mirror your torrent client's path (like Arr's do)
        networks:
            arrs:
                ipv4_address: 10.125.0.96
        command: daemon # this enables the daemon, change to search to specifically run a search ONLY
        restart: unless-stopped # make sure to not enable it in search mode, otherwise it will keep rerunning constantly

    autobrr:
        container_name: autobrr
        image: ghcr.io/autobrr/autobrr:latest
        restart: unless-stopped
        #logging:
        #  driver: json-file
        #  options:
        #    max-file: ${DOCKERLOGGING_MAXFILE}
        #    max-size: ${DOCKERLOGGING_MAXSIZE}
        user: ${PUID}:${PGID}
        environment:
            - TZ=${TZ:-Etc/UTC}
        volumes:
            - ${APP_ROOT}/autobrr/config:/config
        networks:
            - arrs
            - traefik
        expose:
            - 7474
        labels:
            traefik.enable: true
            traefik.http.routers.autobrr-rtr.rule: Host(`autobrr.${DOMAINNAME}`)
            traefik.http.routers.autobrr-rtr.middlewares: middlewares-authentik@file

            homepage.group: internal
            homepage.name: AutoBRR
            homepage.icon: sh-autobrr.svg
            homepage.href: https://autobrr.${DOMAINNAME}

    gluetun:
        image: qmcgaw/gluetun
        container_name: gluetun
        cap_add:
            - NET_ADMIN
        devices:
            - /dev/net/tun:/dev/net/tun
        environment:
            - VPN_SERVICE_PROVIDER=${WIREGUARD_PROVIDER}

            - VPN_TYPE=wireguard
            - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
            - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
            - WIREGUARD_PRESHARED_KEY=${WIREGUARD_PRESHARED_KEY}

            # IMPORTANT FOR SPEEDS
            - SERVER_CITIES=${WIREGUARD_SERVER_CITIES}

            - FIREWALL_VPN_INPUT_PORTS=${TORRENT_PORT}
        networks:
            - arrs
            - traefik
        expose:
            - 8080
        labels:
            traefik.enable: true
            traefik.http.routers.qbittorrent-rtr.rule: Host(`qbit.${DOMAINNAME}`)
            traefik.http.routers.qbittorrent-rtr.middlewares: middlewares-authentik@file
            traefik.http.services.qbittorrent-svc.loadbalancer.server.port: 8080

            homepage.group: internal
            homepage.name: qBittorrent
            homepage.icon: sh-qbittorrent.svg
            homepage.href: https://qbit.${DOMAINNAME}
        restart: unless-stopped
